{"version":3,"sources":["logo.svg","components/Header.tsx","components/ConvertCase.tsx","components/ConvertBigNumber.tsx","App.tsx","index.tsx"],"names":["Header","Navbar","bg","variant","Container","Brand","href","alt","src","logo","width","height","className","ConvertCase","useState","textArea","setTextArea","character","setCharacter","Form","Group","controlId","Label","Control","as","rows","onChange","e","target","value","length","Button","onClick","toUpperCase","toLowerCase","text","charAt","slice","replace","a","split","map","word","join","m","chr","ConvertBigNumber","input","setInput","BigNumber","dividedBy","toString","multipliedBy","App","Row","Col","xs","Tabs","defaultActiveKey","id","Tab","eventKey","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b31eb048.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.958e7d84.svg\";","import React from 'react'\nimport logo from '../logo.svg'\nimport { Container, Navbar } from 'react-bootstrap'\n\nconst Header = (): JSX.Element => (\n  <Navbar bg=\"dark\" variant=\"dark\">\n    <Container>\n      <Navbar.Brand href=\"#home\">\n        <img alt=\"\" src={logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" /> Tools & Utilities\n      </Navbar.Brand>\n    </Container>\n  </Navbar>\n)\n\nexport default Header\n","import { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nfunction ConvertCase(): JSX.Element {\n  const [textArea, setTextArea] = useState('')\n  const [character, setCharacter] = useState(0)\n\n  const onTextAreaChange = e => {\n    setTextArea(e.target.value)\n    setCharacter(e.target.value.length)\n  }\n\n  function onUpperCase() {\n    setTextArea(textArea.toUpperCase())\n  }\n\n  function onLowerCase() {\n    setTextArea(textArea.toLowerCase())\n  }\n\n  function onCapitalizeFirstLetter() {\n    const text = textArea.toLowerCase()\n    setTextArea(text.charAt(0).toUpperCase() + text.slice(1))\n  }\n\n  function onCapitalizeLetter() {\n    setTextArea(\n      textArea.replace(/(?:^|\\s)\\S/g, a => {\n        return a.toUpperCase()\n      }),\n    )\n  }\n\n  function onSnakeCase() {\n    setTextArea(\n      textArea\n        .replace(/\\W+/g, ' ')\n        .split(/ |\\B(?=[A-Z])/)\n        .map(word => word.toLowerCase())\n        .join('_'),\n    )\n  }\n\n  function onCamelCase() {\n    setTextArea(textArea.toLowerCase().replace(/[^a-zA-Z0-9]+(.)/g, (m, chr) => chr.toUpperCase()))\n  }\n\n  function onClear() {\n    setTextArea('')\n  }\n\n  return (\n    <>\n      <Form>\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label className=\"mt-3 mb-2\">\n            Simply enter your text and choose the case you want to convert it to.\n          </Form.Label>\n          <Form.Control as=\"textarea\" rows={8} onChange={onTextAreaChange} value={textArea} />\n        </Form.Group>\n        <p className=\"mb-3\">Character count: {character}</p>\n        <div className=\"d-flex flex-wrap button-wrapper\">\n          <Button variant=\"outline-primary\" onClick={onUpperCase}>\n            UPPER CASE\n          </Button>\n          <Button variant=\"outline-primary\" onClick={onLowerCase}>\n            lower case\n          </Button>\n          <Button variant=\"outline-primary\" onClick={onCapitalizeFirstLetter}>\n            Sentence case\n          </Button>\n          <Button variant=\"outline-primary\" onClick={onCapitalizeLetter}>\n            Capitalized Case\n          </Button>\n          <Button variant=\"outline-primary\" onClick={onSnakeCase}>\n            Snake case\n          </Button>\n          <Button variant=\"outline-primary\" onClick={onCamelCase}>\n            Camel case\n          </Button>\n          <Button variant=\"outline-primary\" onClick={onClear}>\n            Clear\n          </Button>\n        </div>\n      </Form>\n    </>\n  )\n}\n\nexport default ConvertCase\n","import { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Form, Button } from 'react-bootstrap'\n\nfunction ConvertBigNumber(): JSX.Element {\n  const [input, setInput] = useState('')\n\n  const onTextAreaChange = e => {\n    setInput(e.target.value)\n  }\n\n  function onToWei() {\n    const text = new BigNumber(input).dividedBy(1e18).toString()\n    setInput(text)\n  }\n\n  function onFromWei() {\n    const text = new BigNumber(input).multipliedBy(1e18).toString()\n    setInput(text)\n  }\n\n  function onClear() {\n    setInput('')\n  }\n\n  return (\n    <>\n      <Form>\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label className=\"mt-3 mb-2\">\n            Simply enter your text and choose the case you want to convert it to.\n          </Form.Label>\n          <Form.Control as=\"input\" onChange={onTextAreaChange} value={input} />\n        </Form.Group>\n        <div className=\"d-flex flex-wrap button-wrapper\">\n          <Button variant=\"outline-primary\" onClick={onToWei}>\n            To Wei\n          </Button>\n          <Button variant=\"outline-primary\" onClick={onFromWei}>\n            From Wei\n          </Button>\n          <Button variant=\"outline-primary\" onClick={onClear}>\n            Clear\n          </Button>\n        </div>\n      </Form>\n    </>\n  )\n}\n\nexport default ConvertBigNumber\n","import React from 'react'\nimport './App.scss'\nimport { Container, Row, Col, Tabs, Tab } from 'react-bootstrap'\nimport Header from './components/Header'\nimport ConvertCase from './components/ConvertCase'\nimport ConvertBigNumber from './components/ConvertBigNumber'\n\nconst App = (): JSX.Element => (\n  <>\n    <Header />\n    <Container className=\"mt-5 mb-5\">\n      <Row>\n        <Col xs={12}>\n          <Tabs defaultActiveKey=\"convertCase\" id=\"homepage-tabs\" className=\"mb-3\">\n            <Tab eventKey=\"convertCase\" title=\"Convert Case\">\n              <ConvertCase />\n            </Tab>\n            <Tab eventKey=\"bigNumber\" title=\"Big Number\">\n              <ConvertBigNumber />\n            </Tab>\n          </Tabs>\n        </Col>\n      </Row>\n    </Container>\n  </>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}